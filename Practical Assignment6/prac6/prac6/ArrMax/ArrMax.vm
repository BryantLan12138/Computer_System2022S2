// Contains a function ArrMax.arrMax that finds and returns the largest element in the array a of length b.
// a & b are both supplied as arguments

// Put your code here.
/*
    logic of the program, there will be 2 parameter of the function 
    1. pointer of the array 2. length of array

    also there will be 2 local vairable inside of the function 
    1. int max 2. int index 
    max = arr[index]

    1) check the length of the second parameter, if it's smaller than 1 return -1 
    2) set max to be the first element, index to be 1 
    3) handle incorrect index 

*/

// 1)
function ArrMax.arrMax 2 
push argument 0
pop pointer 1
push argument 1 
push constant 1 
lt 
if-goto EXCEPTION

// 2)
push that 0
// local 1 refers to max
pop local 1 

push constant 1
// local 0 refers to index  
pop local 0

// 3) 
label CHECK_INDEX
// get index
push local 0
// get n
push argument 1 
lt 
if-goto LOOP 
goto END_LOOP


label LOOP
// array pointer aka address of the arr first element 
push argument 0
// get index 
push local 0
add 
pop pointer 1
// push arr[index]
push that 0
// max 
push local 1 
gt 
if-goto CHANGE_MAX
goto INDEX_UPDATE

label CHANGE_MAX
push that 0
pop local 1
goto INDEX_UPDATE

label INDEX_UPDATE
push local 0
push constant 1
add
pop local 0	//index++
goto CHECK_INDEX

label END_LOOP
push local 1
return 

label EXCEPTION 
return 